"""Initial migration

Revision ID: f5c4c2484f18
Revises: 
Create Date: 2025-09-14 01:47:46.675173

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f5c4c2484f18'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('microsoft_user_id', sa.String(length=255), nullable=True),
    sa.Column('profile_picture_url', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_login_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_microsoft_user_id'), ['microsoft_user_id'], unique=True)

    op.create_table('email_accounts',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('email_address', sa.String(length=255), nullable=False),
    sa.Column('display_name', sa.String(length=255), nullable=False),
    sa.Column('provider', sa.String(length=50), nullable=False),
    sa.Column('account_type', sa.String(length=50), nullable=False),
    sa.Column('access_token', sa.Text(), nullable=True),
    sa.Column('refresh_token', sa.Text(), nullable=True),
    sa.Column('token_expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_primary', sa.Boolean(), nullable=False),
    sa.Column('sync_enabled', sa.Boolean(), nullable=False),
    sa.Column('last_sync_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('sync_status', sa.String(length=50), nullable=False),
    sa.Column('sync_error_message', sa.Text(), nullable=True),
    sa.Column('auto_classify_enabled', sa.Boolean(), nullable=False),
    sa.Column('classification_prompt', sa.Text(), nullable=True),
    sa.Column('total_emails_synced', sa.String(length=20), nullable=False),
    sa.Column('last_email_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('email_accounts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_email_accounts_email_address'), ['email_address'], unique=False)

    op.create_table('emails',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('email_account_id', sa.String(length=36), nullable=False),
    sa.Column('microsoft_email_id', sa.String(length=255), nullable=False),
    sa.Column('subject', sa.Text(), nullable=False),
    sa.Column('sender_name', sa.String(length=255), nullable=False),
    sa.Column('sender_email', sa.String(length=255), nullable=False),
    sa.Column('recipient_emails', sa.Text(), nullable=True),
    sa.Column('body_preview', sa.Text(), nullable=True),
    sa.Column('body_content', sa.Text(), nullable=True),
    sa.Column('has_attachments', sa.Boolean(), nullable=False),
    sa.Column('attachment_count', sa.Integer(), nullable=False),
    sa.Column('received_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('is_starred', sa.Boolean(), nullable=False),
    sa.Column('is_important', sa.Boolean(), nullable=False),
    sa.Column('is_archived', sa.Boolean(), nullable=False),
    sa.Column('priority_level', sa.Integer(), nullable=False),
    sa.Column('urgency_category', sa.String(length=20), nullable=False),
    sa.Column('ai_confidence', sa.Float(), nullable=False),
    sa.Column('ai_reasoning', sa.Text(), nullable=True),
    sa.Column('is_classified', sa.Boolean(), nullable=False),
    sa.Column('classified_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('classification_model', sa.String(length=50), nullable=True),
    sa.Column('custom_tags', sa.JSON(), nullable=True),
    sa.Column('user_notes', sa.Text(), nullable=True),
    sa.Column('processing_status', sa.String(length=50), nullable=False),
    sa.Column('processing_error', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['email_account_id'], ['email_accounts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('emails', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_emails_microsoft_email_id'), ['microsoft_email_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_emails_received_at'), ['received_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_emails_sender_email'), ['sender_email'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('emails', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_emails_sender_email'))
        batch_op.drop_index(batch_op.f('ix_emails_received_at'))
        batch_op.drop_index(batch_op.f('ix_emails_microsoft_email_id'))

    op.drop_table('emails')
    with op.batch_alter_table('email_accounts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_email_accounts_email_address'))

    op.drop_table('email_accounts')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_microsoft_user_id'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    # ### end Alembic commands ###
